{"version":3,"file":"learningmap.min.js","sources":["../src/learningmap.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport placestore from 'mod_learningmap/placestore';\n\nexport const init = () => {\n    // Load the needed template on startup for better execution speed.\n    Templates.prefetchTemplates(['mod_learningmap/cssskeleton']);\n\n    // Variable for storing the mouse offset\n    var offset;\n\n    // Variables for storing the paths that need update of the first (upd1) or\n    // the second (upd2) coordinates.\n    var upd1, upd2;\n\n    // Variables for handling the currently selected elements\n    var selectedElement = null,\n        firstPlace = null,\n        secondPlace = null,\n        lastTarget = null;\n\n    // Variable for storing the selected element for the activity selector\n    var elementForActivitySelector = null;\n\n    // DOM nodes for the editor\n    let mapdiv = document.getElementById('learningmap-editor-map');\n    let code = document.getElementById('id_introeditor_text');\n    let colorChooserPlace = document.getElementById('learningmap-color-place');\n    let colorChooserVisited = document.getElementById('learningmap-color-visited');\n    let colorChooserPath = document.getElementById('learningmap-color-path');\n\n\n    // DOM nodes for the activity selector\n    let activitySetting = document.getElementById('learningmap-activity-setting');\n    let activitySelector = document.getElementById('learningmap-activity-selector');\n    let activityStarting = document.getElementById('learningmap-activity-starting');\n    let activityTarget = document.getElementById('learningmap-activity-target');\n    let advancedSettingsIcon = document.getElementById('learningmap-advanced-settings-icon');\n\n    // Hide tree view as there is no preview file we can attach to\n    let treeView = document.querySelector('.fp-viewbar .fp-vb-tree');\n    if (treeView) {\n        treeView.setAttribute('style', 'display: none;');\n    }\n\n    // Trigger click event on icon view to ensure that tree view is not active.\n    let iconView = document.querySelector('.fp-viewbar .fp-vb-icons');\n    if (iconView) {\n        // Handle possible delay in form loading.\n        setTimeout(() => {\n            iconView.dispatchEvent(new Event('click'));\n        }, 1000);\n    }\n\n    // Attach listeners to the activity selector\n    if (activitySelector) {\n        // Show places that are not linked to an activity\n        activitySelector.addEventListener('change', function() {\n            placestore.setActivityId(elementForActivitySelector, activitySelector.value);\n            if (activitySelector.value) {\n                document.getElementById(elementForActivitySelector).classList.remove('learningmap-emptyplace');\n            } else {\n                document.getElementById(elementForActivitySelector).classList.add('learningmap-emptyplace');\n            }\n            updateActivities();\n            updateCode();\n        });\n        // Add / remove a place to the starting places array\n        activityStarting.addEventListener('change', function() {\n            if (activityStarting.checked) {\n                placestore.addStartingPlace(elementForActivitySelector);\n            } else {\n                placestore.removeStartingPlace(elementForActivitySelector);\n            }\n            updateCode();\n        });\n        // Add / remove a place to the target places array\n        activityTarget.addEventListener('change', function() {\n            if (activityTarget.checked) {\n                placestore.addTargetPlace(elementForActivitySelector);\n                document.getElementById(elementForActivitySelector).classList.add('learningmap-targetplace');\n            } else {\n                placestore.removeTargetPlace(elementForActivitySelector);\n                document.getElementById(elementForActivitySelector).classList.remove('learningmap-targetplace');\n            }\n            updateCode();\n        });\n    }\n\n    // Load placestore values from the hidden input field\n    let placestoreInput = document.getElementsByName('placestore')[0];\n    if (placestoreInput) {\n        placestore.loadJSON(placestoreInput.value);\n    }\n\n    // Mark all activities in the placestore as \"used\".\n    updateActivities();\n\n    // Attach listeners to the advanced settings div\n    if (advancedSettingsIcon) {\n        let advancedSettings = document.getElementById('learningmap-advanced-settings');\n        advancedSettingsIcon.addEventListener('click', function() {\n            advancedSettings.removeAttribute('hidden');\n        });\n        let advancedSettingsClose = document.getElementById('learningmap-advanced-settings-close');\n        if (advancedSettingsClose) {\n            advancedSettingsClose.addEventListener('click', function() {\n                advancedSettings.setAttribute('hidden', '');\n            });\n        }\n\n        let hidepaths = document.getElementById('learningmap-hidepaths');\n        // Attach a listener to the hidepaths checkbox\n        if (hidepaths) {\n            if (placestore.getHidePaths()) {\n                hidepaths.checked = true;\n            }\n            hidepaths.addEventListener('change', function() {\n                if (hidepaths.checked) {\n                    placestore.setHidePaths(true);\n                } else {\n                    placestore.setHidePaths(false);\n                }\n                updateCSS();\n            });\n        }\n\n        let hidestroke = document.getElementById('learningmap-hidestroke');\n        // Attach a listener to the hidestrokescheckbox\n        if (hidestroke) {\n            if (placestore.getStrokeOpacity() < 1) {\n                hidestroke.checked = true;\n            }\n            hidestroke.addEventListener('change', function() {\n                if (hidestroke.checked) {\n                    placestore.setStrokeOpacity(0);\n                } else {\n                    placestore.setStrokeOpacity(1);\n                }\n                updateCSS();\n            });\n        }\n\n        let usecheckmark = document.getElementById('learningmap-usecheckmark');\n        // Attach a listener to the usecheckmark checkbox\n        if (usecheckmark) {\n            if (placestore.getUseCheckmark()) {\n                usecheckmark.checked = true;\n            }\n            usecheckmark.addEventListener('change', function() {\n                if (usecheckmark.checked) {\n                    placestore.setUseCheckmark(true);\n                } else {\n                    placestore.setUseCheckmark(false);\n                }\n                updateCSS();\n            });\n        }\n\n        let hover = document.getElementById('learningmap-hover');\n        // Attach a listener to the hover checkbox\n        if (hover) {\n            if (placestore.getHover()) {\n                hover.checked = true;\n            }\n            hover.addEventListener('change', function() {\n                if (hover.checked) {\n                    placestore.setHover(true);\n                } else {\n                    placestore.setHover(false);\n                }\n                updateCSS();\n            });\n        }\n\n        let pulse = document.getElementById('learningmap-pulse');\n        // Attach a listener to the pulse checkbox\n        if (pulse) {\n            if (placestore.getPulse()) {\n                pulse.checked = true;\n            }\n            pulse.addEventListener('change', function() {\n                if (pulse.checked) {\n                    placestore.setPulse(true);\n                } else {\n                    placestore.setPulse(false);\n                }\n                updateCSS();\n            });\n        }\n\n        let showall = document.getElementById('learningmap-showall');\n        // Attach a listener to the pulse checkbox\n        if (showall) {\n            if (placestore.getShowall()) {\n                showall.checked = true;\n            }\n            showall.addEventListener('change', function() {\n                if (showall.checked) {\n                    placestore.setShowall(true);\n                } else {\n                    placestore.setShowall(false);\n                }\n                updateCSS();\n            });\n        }\n}\n\n    // Attach listener to the color choosers for paths\n    if (colorChooserPath) {\n        colorChooserPath.addEventListener('change', function() {\n            placestore.setColor('stroke', colorChooserPath.value);\n            updateCSS();\n        });\n        colorChooserPath.value = placestore.getColor('stroke');\n    }\n\n    // Attach listener to the color choosers for places\n    if (colorChooserPlace) {\n        colorChooserPlace.addEventListener('change', function() {\n            placestore.setColor('place', colorChooserPlace.value);\n            updateCSS();\n        });\n        colorChooserPlace.value = placestore.getColor('place');\n    }\n\n    // Attach listener to the color choosers for visited places\n    if (colorChooserVisited) {\n        colorChooserVisited.addEventListener('change', function() {\n            placestore.setColor('visited', colorChooserVisited.value);\n            updateCSS();\n        });\n        colorChooserVisited.value = placestore.getColor('visited');\n    }\n\n    // Get SVG code from the (hidden) textarea field\n    if (code && mapdiv) {\n        mapdiv.innerHTML = code.value;\n    }\n    // Reload background image to get the correct width and height values\n    refreshBackgroundImage();\n    registerBackgroundListener();\n    updateCode();\n\n    // Enable dragging of places\n    let svg = document.getElementById('learningmap-svgmap-' + placestore.getMapid());\n    makeDraggable(svg);\n\n    // Refresh stylesheet values from placestore\n    updateCSS();\n\n    // Add listeners for clicking and context menu\n    if (mapdiv) {\n        mapdiv.addEventListener('dblclick', dblclickHandler);\n        mapdiv.addEventListener('click', clickHandler);\n\n        mapdiv.addEventListener('contextmenu', function(e) {\n            e.preventDefault();\n            showContextMenu(e);\n        }, false);\n    }\n    /**\n     * Shows the context menu at the current mouse position\n     * @param {*} e\n     */\n    function showContextMenu(e) {\n        unselectAll();\n        if (activitySetting) {\n            if (e.target.classList.contains('learningmap-place')) {\n                e.target.classList.add('learningmap-selected-activity-selector');\n                let activityId = placestore.getActivityId(e.target.id);\n                let cy = e.offsetY;\n                let cx = e.offsetX;\n                let vertical = 'top';\n                let height = svg.getBoundingClientRect().height;\n                let width = svg.getBoundingClientRect().width;\n                if (cy > height / 2) {\n                    vertical = 'bottom';\n                    cy = height - cy;\n                }\n                let horizontal = 'left';\n                if (cx > width / 2) {\n                    horizontal = 'right';\n                    cx = width - cx;\n                }\n                activitySetting.setAttribute('style', vertical + ': ' + cy + 'px; ' + horizontal + ': ' + cx + 'px;');\n                activitySetting.removeAttribute('hidden');\n                document.getElementById('learningmap-activity-selector').value = activityId;\n                if (placestore.isStartingPlace(e.target.id)) {\n                    document.getElementById('learningmap-activity-starting').checked = true;\n                } else {\n                    document.getElementById('learningmap-activity-starting').checked = false;\n                }\n                if (placestore.isTargetPlace(e.target.id)) {\n                    document.getElementById('learningmap-activity-target').checked = true;\n                } else {\n                    document.getElementById('learningmap-activity-target').checked = false;\n                }\n                elementForActivitySelector = e.target.id;\n            } else {\n                hideContextMenu();\n            }\n        }\n    }\n\n    /**\n     * Hides the context menu\n     */\n    function hideContextMenu() {\n        let e = document.getElementById(elementForActivitySelector);\n        if (e) {\n            e.classList.remove('learningmap-selected-activity-selector');\n        }\n        activitySetting.setAttribute('hidden', '');\n    }\n\n    let backgroundfileNode = document.getElementById('id_introeditor_itemid_fieldset');\n    if (backgroundfileNode) {\n        let observer = new MutationObserver(refreshBackgroundImage);\n        observer.observe(backgroundfileNode, {attributes: true, childList: true, subtree: true});\n    }\n    /**\n     * Enables dragging on an DOM node\n     * @param {*} el\n     */\n    function makeDraggable(el) {\n        if (el) {\n            el.addEventListener('mousedown', startDrag);\n            el.addEventListener('mousemove', drag);\n            el.addEventListener('mouseup', endDrag);\n            el.addEventListener('mouseleave', endDrag);\n            el.addEventListener('touchstart', startDrag);\n            el.addEventListener('touchmove', drag);\n            el.addEventListener('touchend', endDrag);\n            el.addEventListener('touchleave', endDrag);\n            el.addEventListener('touchcancel', endDrag);\n        }\n\n        /**\n         * Helper function for getting the right coordinates from the mouse\n         * @param {*} evt\n         * @returns {object}\n         */\n        function getMousePosition(evt) {\n            var CTM = el.getScreenCTM();\n            if (evt.touches) {\n                evt = evt.touches[0];\n            }\n            return {\n                x: (evt.clientX - CTM.e) / CTM.a,\n                y: (evt.clientY - CTM.f) / CTM.d\n            };\n        }\n\n        /**\n         * Function called whenn dragging starts.\n         * @param {*} evt\n         */\n        function startDrag(evt) {\n            evt.preventDefault();\n            if (evt.target.classList.contains('learningmap-draggable')) {\n                selectedElement = evt.target;\n                offset = getMousePosition(evt);\n                offset.x -= parseInt(selectedElement.getAttributeNS(null, \"cx\"));\n                offset.y -= parseInt(selectedElement.getAttributeNS(null, \"cy\"));\n                // Get paths that need to be updated.\n                upd1 = placestore.getPathsWithFid(selectedElement.id);\n                upd2 = placestore.getPathsWithSid(selectedElement.id);\n            }\n        }\n\n        /**\n         * Function called during dragging. Continuously updates circles center coordinates and the\n         * coordinates of the touching paths.\n         * @param {*} evt\n         */\n        function drag(evt) {\n            evt.preventDefault();\n            if (selectedElement) {\n                var coord = getMousePosition(evt);\n                let cx = coord.x - offset.x;\n                let cy = coord.y - offset.y;\n                selectedElement.setAttributeNS(null, \"cx\", cx);\n                selectedElement.setAttributeNS(null, \"cy\", cy);\n\n                upd1.forEach(function(p) {\n                    let d = document.getElementById(p.id);\n                    if (!(d === null)) {\n                        if (d.nodeName == 'path') {\n                            let pathDeclaration = d.getAttribute('d');\n                            let newPathDeclaration = 'M ' + cx + ' ' + cy + ' L' + pathDeclaration.split('L')[1];\n                            d.setAttribute('d', newPathDeclaration);\n                        } else {\n                            d.setAttribute('x1', cx);\n                            d.setAttribute('y1', cy);\n                        }\n                    }\n                });\n\n                upd2.forEach(function(p) {\n                    let d = document.getElementById(p.id);\n                    if (!(d === null)) {\n                        if (d.nodeName == 'path') {\n                            let pathDeclaration = d.getAttribute('d');\n                            let newPathDeclaration = pathDeclaration.split('L')[0] + 'L ' + cx + ' ' + cy;\n                            d.setAttribute('d', newPathDeclaration);\n                        } else {\n                            d.setAttribute('x2', cx);\n                            d.setAttribute('y2', cy);\n                        }\n                    }\n                });\n            }\n        }\n\n        /**\n         * Function called when dragging ends.\n         * @param {*} evt\n         */\n        function endDrag(evt) {\n            evt.preventDefault();\n            selectedElement = null;\n            unselectAll();\n            updateCode();\n        }\n    }\n\n    /**\n     * Updates the form fields for the SVG code and the placestore from the editor.\n     */\n    function updateCode() {\n        if (code && mapdiv) {\n            code.innerHTML = mapdiv.innerHTML;\n        }\n        if (placestoreInput) {\n            document.getElementsByName('placestore')[0].value = JSON.stringify(placestore.getPlacestore());\n        }\n    }\n\n    /**\n     * Handles double clicks on the map\n     * @param {*} event\n     */\n    function dblclickHandler(event) {\n        hideContextMenu();\n        unselectAll();\n        if (event.target.classList.contains('learningmap-mapcontainer') ||\n            event.target.classList.contains('learningmap-background-image')) {\n            addPlace(event);\n        } else if (event.target.classList.contains('learningmap-place')) {\n            if (lastTarget == event.target.id) {\n                lastTarget = null;\n                clickHandler(event);\n            } else {\n                removePlace(event);\n            }\n        } else if (event.target.classList.contains('learningmap-path')) {\n            removePath(event.target.id);\n        }\n        updateCode();\n    }\n\n    /**\n     * Returns an empty title tag with the given id.\n     * @param {*} id id for the title\n     * @returns {any}\n     */\n    function title(id) {\n        let title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        title.setAttribute('id', id);\n        return title;\n    }\n\n    /**\n     * Returns a circle tag with the given dimensions.\n     * @param {*} x x coordinate of the center\n     * @param {*} y y coordinate of the center\n     * @param {*} r radius\n     * @param {*} classes classes to add\n     * @param {*} id id of the circle\n     * @returns {any}\n     */\n    function circle(x, y, r, classes, id) {\n        let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        circle.setAttribute('class', classes);\n        circle.setAttribute('id', id);\n        circle.setAttribute('cx', x);\n        circle.setAttribute('cy', y);\n        circle.setAttribute('r', r);\n        return circle;\n    }\n\n    /**\n     * Returns a path between two points.\n     * @param {*} x1 x coordinate of the first point\n     * @param {*} y1 y coordinate of the first point\n     * @param {*} x2 x coordinate of the second point\n     * @param {*} y2 y coordinate of the second point\n     * @param {*} classes CSS classes to set\n     * @param {*} id id of the path\n     * @returns {any}\n     */\n     function path(x1, y1, x2, y2, classes, id) {\n        let path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('class', classes);\n        path.setAttribute('id', id);\n        path.setAttribute('d', 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2);\n        return path;\n    }\n\n    /**\n     * Returns a link around a given child element. This function also adds a title element next\n     * to the child for accessibility.\n     * @param {*} child child item to set the link on\n     * @param {*} id id of the link\n     * @param {*} title title of the link\n     * @returns {any}\n     */\n    function link(child, id, title = null) {\n        let link = document.createElementNS('http://www.w3.org/2000/svg', 'a');\n        link.setAttribute('id', id);\n        link.setAttribute('xlink:href', '');\n        link.appendChild(child);\n        if (!(title === null)) {\n            link.appendChild(title);\n        }\n        return link;\n    }\n\n    /**\n     * Adds a place on the SVG map. This function also prepares the code for linking activities\n     * and adding titles (for accessibility).\n     * @param {*} event event causing the command\n     */\n    function addPlace(event) {\n        let placesgroup = document.getElementById('placesGroup');\n        let placeId = 'p' + placestore.getId();\n        let linkId = 'a' + placestore.getId();\n        var CTM = event.target.getScreenCTM();\n        if (event.touches) {\n            event = event.touches[0];\n        }\n        let cx = (event.clientX - CTM.e) / CTM.a;\n        let cy = (event.clientY - CTM.f) / CTM.d;\n        placesgroup.appendChild(\n            link(\n                circle(cx, cy, 10, 'learningmap-place learningmap-draggable learningmap-emptyplace', placeId),\n                linkId,\n                title('title' + placeId)\n            )\n        );\n        placestore.addPlace(placeId, linkId);\n    }\n\n    /**\n     * Handles single clicks on the background image.\n     * @param {*} event click event\n     * @returns {void}\n     */\n    function clickHandler(event) {\n        event.preventDefault();\n        hideContextMenu();\n        if (event.target.classList.contains('learningmap-place') && selectedElement === null) {\n            if (firstPlace === null) {\n                firstPlace = event.target.id;\n                document.getElementById(firstPlace).classList.add('learningmap-selected');\n            } else {\n                secondPlace = event.target.id;\n                let fid = parseInt(firstPlace.replace('p', ''));\n                let sid = parseInt(secondPlace.replace('p', ''));\n                if (sid == fid) {\n                    return;\n                }\n                if (sid < fid) {\n                    let z = sid;\n                    sid = fid;\n                    fid = z;\n                }\n                addPath(fid, sid);\n                let first = document.getElementById(firstPlace);\n                if (first) {\n                    first.classList.remove('learningmap-selected');\n                }\n                firstPlace = null;\n                lastTarget = secondPlace;\n                secondPlace = null;\n            }\n        } else {\n            unselectAll();\n            firstPlace = null;\n        }\n    }\n    /**\n     * Removes the classes 'learningmap-selected' and 'learningmap-selectet-activity-selector'\n     * from all nodes\n     */\n    function unselectAll() {\n        Array.from(document.getElementsByClassName('learningmap-selected')).forEach(function(e) {\n            e.classList.remove('learningmap-selected');\n        });\n        Array.from(document.getElementsByClassName('learningmap-selected-activity-selector')).forEach(function(e) {\n            e.classList.remove('learningmap-selected-activity-selector');\n        });\n    }\n\n    /**\n     * Adds a path between two places.\n     * @param {number} fid id of the first place (meant to be the smaller one)\n     * @param {number} sid id of the second place (meant to be the bigger one)\n     */\n    function addPath(fid, sid) {\n        let pid = 'p' + fid + '_' + sid;\n        if (document.getElementById(pid) === null) {\n            let pathsgroup = document.getElementById('pathsGroup');\n            let first = document.getElementById('p' + fid);\n            let second = document.getElementById('p' + sid);\n            if (pathsgroup && first && second) {\n                pathsgroup.appendChild(\n                    path(\n                        first.cx.baseVal.value,\n                        first.cy.baseVal.value,\n                        second.cx.baseVal.value,\n                        second.cy.baseVal.value,\n                        'learningmap-path',\n                        pid\n                    )\n                );\n                placestore.addPath(pid, 'p' + fid, 'p' + sid);\n            }\n        }\n    }\n\n    /**\n     * Removes a place from the SVG and the placestore. This function also removes all\n     * touching paths and entries in statringplaces / targetplaces linking to the removed\n     * place.\n     * @param {any} event event causing the remove order\n     */\n    function removePlace(event) {\n        let place = document.getElementById(event.target.id);\n        let parent = place.parentNode;\n        removePathsTouchingPlace(event.target.id);\n        placestore.removePlace(event.target.id);\n        parent.removeChild(place);\n        parent.parentNode.removeChild(parent);\n\n        updateCode();\n    }\n\n    /**\n     * Removes all paths touching a certain place\n     * @param {number} id id of the place\n     */\n    function removePathsTouchingPlace(id) {\n        placestore.getTouchingPaths(id).forEach(\n            function(e) {\n                removePath(e.id);\n            }\n        );\n    }\n\n    /**\n     * Removes a path from the SVG and from the placestore\n     * @param {number} id id of the path\n     */\n    function removePath(id) {\n        let path = document.getElementById(id);\n        if (!(path === null)) {\n            path.parentNode.removeChild(path);\n            placestore.removePath(id);\n        }\n    }\n\n    /**\n     * Sets the background image of the SVG to the current image in filemanager.\n     */\n    function refreshBackgroundImage() {\n        let previewimage = document.getElementsByClassName('realpreview');\n        if (previewimage.length > 0) {\n            let background = document.getElementById('learningmap-background-image');\n            let backgroundurl = previewimage[0].getAttribute('src').split('?')[0];\n            // If the uploaded file reuses the filename of a previously uploaded image, they differ\n            // only in the oid. So one has to append the oid to the url.\n            if (previewimage[0].getAttribute('src').split('?')[1].includes('&oid=')) {\n                backgroundurl += '?oid=' + previewimage[0].getAttribute('src').split('&oid=')[1];\n            }\n            background.setAttribute('xlink:href', backgroundurl);\n        }\n    }\n\n    /**\n     * Adds an eventListener to the background image for watching file changes and updating\n     * height and width of the image.\n     */\n    function registerBackgroundListener() {\n        let background = document.getElementById('learningmap-background-image');\n        if (background) {\n            background.addEventListener('load', function() {\n                background.removeAttribute('height');\n                let height = parseInt(background.getBBox().height);\n                let width = background.getBBox().width;\n                placestore.setBackgroundDimensions(width, height);\n                svg.setAttribute('viewBox', '0 0 ' + placestore.width + ' ' + placestore.height);\n                background.setAttribute('width', width);\n                background.setAttribute('height', height);\n                updateCode();\n            });\n        }\n    }\n\n    /**\n     * Updates CSS code inside the SVG (called, when one of the colors is changed).\n     * Calls updateCode() when completed.\n     */\n    function updateCSS() {\n        Templates.renderForPromise('mod_learningmap/cssskeleton', placestore.getPlacestore())\n            .then(({html, js}) => {\n                Templates.replaceNode('#learningmap-svgstyle', html, js);\n                updateCode();\n                return true;\n            })\n            .catch(ex => displayException(ex));\n    }\n\n    /**\n     * Updates the activity selector to highlight the activities already used\n     */\n    function updateActivities() {\n        let activities = placestore.getAllActivities();\n        let options = Array.from(activitySelector.getElementsByTagName('option'));\n        options.forEach(function(n) {\n            if (activities.includes(n.value)) {\n                n.classList.add('learningmap-used-activity');\n            } else {\n                n.classList.remove('learningmap-used-activity');\n            }\n        });\n    }\n};\n"],"names":["offset","upd1","upd2","prefetchTemplates","selectedElement","firstPlace","secondPlace","lastTarget","elementForActivitySelector","mapdiv","document","getElementById","code","colorChooserPlace","colorChooserVisited","colorChooserPath","activitySetting","activitySelector","activityStarting","activityTarget","advancedSettingsIcon","treeView","querySelector","setAttribute","iconView","setTimeout","dispatchEvent","Event","addEventListener","setActivityId","value","classList","remove","add","updateActivities","updateCode","checked","addStartingPlace","removeStartingPlace","addTargetPlace","removeTargetPlace","placestoreInput","getElementsByName","loadJSON","advancedSettings","removeAttribute","advancedSettingsClose","hidepaths","placestore","getHidePaths","setHidePaths","updateCSS","hidestroke","getStrokeOpacity","setStrokeOpacity","usecheckmark","getUseCheckmark","setUseCheckmark","hover","getHover","setHover","pulse","getPulse","setPulse","showall","getShowall","setShowall","setColor","getColor","innerHTML","refreshBackgroundImage","background","height","parseInt","getBBox","width","setBackgroundDimensions","svg","registerBackgroundListener","getMapid","hideContextMenu","e","el","startDrag","drag","endDrag","getMousePosition","evt","CTM","getScreenCTM","touches","x","clientX","a","y","clientY","f","d","preventDefault","target","contains","getAttributeNS","getPathsWithFid","id","getPathsWithSid","coord","cx","cy","setAttributeNS","forEach","p","nodeName","pathDeclaration","getAttribute","newPathDeclaration","split","unselectAll","makeDraggable","event","placesgroup","placeId","getId","linkId","appendChild","child","title","link","createElementNS","r","classes","circle","addPlace","clickHandler","place","parent","parentNode","getTouchingPaths","removePath","removePlace","removeChild","activityId","getActivityId","offsetY","offsetX","vertical","getBoundingClientRect","horizontal","isStartingPlace","isTargetPlace","showContextMenu","backgroundfileNode","MutationObserver","observe","attributes","childList","subtree","JSON","stringify","getPlacestore","fid","replace","sid","z","pid","pathsgroup","first","second","x1","y1","x2","y2","path","baseVal","addPath","Array","from","getElementsByClassName","previewimage","length","backgroundurl","includes","renderForPromise","then","_ref","html","js","replaceNode","catch","ex","activities","getAllActivities","getElementsByTagName","n"],"mappings":"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"}